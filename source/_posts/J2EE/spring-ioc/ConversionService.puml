@startuml

interface ConversionService{
boolean canConvert(@Nullable Class<?> sourceType, Class<?> targetType)
boolean canConvert(@Nullable TypeDescriptor sourceType, TypeDescriptor targetType)
T convert(@Nullable Object source, Class<T> targetType)
Object convert(@Nullable Object source, @Nullable TypeDescriptor sourceType, TypeDescriptor targetType)
}
interface ConverterRegistry{
void addConverter(Converter<?, ?> converter)
void addConverter(Class<?> sourceType, Class<?> targetType, Converter<?, ?> converter)
void addConverter(GenericConverter converter)
void addConverterFactory(ConverterFactory<?, ?> factory)
void removeConvertible(Class<?> sourceType, Class<?> targetType)
}
interface ConfigurableConversionService
ConversionService <|-- ConfigurableConversionService
ConverterRegistry <|-right- ConfigurableConversionService
ConfigurableConversionService <|-- GenericConversionService
GenericConversionService <|-- DefaultConversionService

@enduml